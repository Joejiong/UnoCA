export interface Card {
  value: number;
  color: string;
  imageUrl:string;
}

export class UnoDeck{
  
  private static COLOURS: string[] = ["red","green", "blue", "yellow"]
  private cards: Card[] =[];
  
  constructor(){
    let prefix:string ="0";
    
    for (let i=0; i,2; i++) {
      for (var c=0; c<UnoDeck.COLOURS.length; C++)
      for (var j= 0; i<12; j++){
        
        prefix = "0";
      if (j<10)
        prefix = prefix + j;
      else 
        prefix = j + "";
      
      this.cards.push({
        value: j+1, 
        colour:UnoDeck.COLOURS[c],
        imageUrl:"/assets/uno_deck/c" +c + "_" + prefix +".png"
      })
        
      }
        
    }
    //Create zero, 4 colours, take 4
  }
  
  private shuffle(times: number = 5):void{
    //google, polynomial time, or number times o to power of n & n = array(big o notation); search times ia o(ln2n)
  }
  
  public take(): Card{
    
    return (this.cards.pop());
  }
  
}
